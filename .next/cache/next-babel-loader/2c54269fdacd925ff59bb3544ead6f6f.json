{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD (Wipro)/Users/aris/projects/anticorona/anticorona/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Stores from '../components/Stores/Stores';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst ALL_STORES_QUERY = gql`\n  query getStoreByName($name: String!){\n    store\n  }\n`;\nexport const allStoresQueryVars = {\n  name: 'tesco1'\n};\n\nconst Index = ({\n  data\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \" Welcome to my workshop\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, __jsx(\"a\", {\n  href: \"/about\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"About\"), data)));\n\nIndex.getInitialProps = async () => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_STORES_QUERY, {\n    variables: allStoresQueryVars,\n    // Setting this value to true will make the component rerender when\n    // the \"networkStatus\" changes, so we are able to know if it is fetching\n    // more data\n    notifyOnNetworkStatusChange: true\n  });\n  return {\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Volumes/Macintosh HD (Wipro)/Users/aris/projects/anticorona/anticorona/src/pages/index.js"],"names":["Layout","fetch","Stores","useQuery","gql","ALL_STORES_QUERY","allStoresQueryVars","name","Index","data","getInitialProps","loading","error","fetchMore","networkStatus","variables","notifyOnNetworkStatusChange"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,gBAAgB,GAAGD,GAAI;;;;CAA7B;AAMA,OAAO,MAAME,kBAAkB,GAAG;AAC9BC,EAAAA,IAAI,EAAE;AADwB,CAA3B;;AAMP,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAEV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEKA,IAFL,CADJ,CAFJ,CAFJ;;AAaAD,KAAK,CAACE,eAAN,GAAwB,YAAY;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBH,IAAAA,IAAlB;AAAwBI,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDX,QAAQ,CAC/DE,gBAD+D,EAE/D;AACEU,IAAAA,SAAS,EAAET,kBADb;AAEE;AACA;AACA;AACAU,IAAAA,2BAA2B,EAAE;AAL/B,GAF+D,CAAnE;AAWA,SAAO;AAACP,IAAAA;AAAD,GAAP;AACH,CAbD;;AAeA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Stores from '../components/Stores/Stores';\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nconst ALL_STORES_QUERY = gql`\n  query getStoreByName($name: String!){\n    store\n  }\n`\n\nexport const allStoresQueryVars = {\n    name: 'tesco1'\n}\n\n\n\nconst Index = ({data}) => (\n    \n    <Layout>\n        <h1> Welcome to my workshop</h1>\n        <ul>\n            <li>\n                <a href=\"/about\">About</a>\n                {data}\n            </li>\n        </ul>\n    </Layout>\n)\n\nIndex.getInitialProps = async () => {\n    const { loading, error, data, fetchMore, networkStatus } = useQuery(\n        ALL_STORES_QUERY,\n        {\n          variables: allStoresQueryVars,\n          // Setting this value to true will make the component rerender when\n          // the \"networkStatus\" changes, so we are able to know if it is fetching\n          // more data\n          notifyOnNetworkStatusChange: true,\n        }\n      )\n\n    return {data};\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}
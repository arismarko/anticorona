{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD (Wipro)/Users/aris/projects/anticorona/anticorona/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Stores from '../components/Stores/Stores';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst ALL_STORES_QUERY = gql`\n  query getStoreByName($name: String!){\n    store\n  }\n`;\nexport const allStoresQueryVars = {\n  name: 'tesco1'\n};\nexport default function Index() {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_STORES_QUERY, {\n    variables: allStoresQueryVars,\n    // Setting this value to true will make the component rerender when\n    // the \"networkStatus\" changes, so we are able to know if it is fetching\n    // more data\n    notifyOnNetworkStatusChange: true\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Welcome to my workshop\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"About\"), data)));\n}","map":{"version":3,"sources":["/Volumes/Macintosh HD (Wipro)/Users/aris/projects/anticorona/anticorona/src/pages/index.js"],"names":["Layout","fetch","Stores","useQuery","gql","ALL_STORES_QUERY","allStoresQueryVars","name","Index","loading","error","data","fetchMore","networkStatus","variables","notifyOnNetworkStatusChange"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,gBAAgB,GAAGD,GAAI;;;;CAA7B;AAMA,OAAO,MAAME,kBAAkB,GAAG;AAC9BC,EAAAA,IAAI,EAAE;AADwB,CAA3B;AAMP,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDV,QAAQ,CACjEE,gBADiE,EAEjE;AACES,IAAAA,SAAS,EAAER,kBADb;AAEE;AACA;AACA;AACAS,IAAAA,2BAA2B,EAAE;AAL/B,GAFiE,CAAnE;AAWA,SAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEKJ,IAFL,CADJ,CAFJ,CAFF;AAYD","sourcesContent":["import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Stores from '../components/Stores/Stores';\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nconst ALL_STORES_QUERY = gql`\n  query getStoreByName($name: String!){\n    store\n  }\n`\n\nexport const allStoresQueryVars = {\n    name: 'tesco1'\n}\n\n\n\nexport default function Index() {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_STORES_QUERY,\n    {\n      variables: allStoresQueryVars,\n      // Setting this value to true will make the component rerender when\n      // the \"networkStatus\" changes, so we are able to know if it is fetching\n      // more data\n      notifyOnNetworkStatusChange: true,\n    }\n  )\n\n  return (\n    \n    <Layout>\n        <h1> Welcome to my workshop</h1>\n        <ul>\n            <li>\n                <a href=\"/about\">About</a>\n                {data}\n            </li>\n        </ul>\n    </Layout>\n  )\n}"]},"metadata":{},"sourceType":"module"}